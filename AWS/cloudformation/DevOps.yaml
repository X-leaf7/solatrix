AWSTemplateFormatVersion: 2010-09-09

Description: CFN Template to deploy CodePipeline to build Docker Image and push to ECR

Parameters:

  GitSourceRepo:
    Type: String
    Description: GitHub source repository - must contain a Dockerfile in the base
    Default: split-side
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub repository name

  GitBranch:
    Type: String
    Default: main
    Description: GitHub git repository branch - change triggers a new build
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub repository branch name

  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub API token from https://github.com/settings/tokens
    MinLength: 3
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub personal access token

  GitHubUser:
    Type: String
    Description: GitHub username or organization
    Default: podiuminteractive
    MinLength: 3
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub username or organization

  Domain:
    Type: String
    Description: Root Domain for the deployment
    Default: split-side.com

Resources:

  AdminAppEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "admin-web-app-${GitBranch}"

  ChatServerEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "chat-server-${GitBranch}"

  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: codepipeline-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              - Resource:
                  - !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
                  - !Sub arn:aws:s3:::us-east-1-split-side-codepipeline-artifacts/*
                  - !Sub arn:aws:s3:::${GitSourceRepo}-${GitBranch}-app-bucket-*/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObjectAcl
              - Resource: !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/${GitSourceRepo}-${GitBranch}*"
                Effect: Allow
                Action:
                  - 'cloudformation:Describe*'
                  - 'cloudformation:Get*'
                  - 'cloudformation:Create*'
                  - 'cloudformation:Update*'

  CodeBuildServiceRole:
   Type: AWS::IAM::Role
   Properties:
     Path: /
     AssumeRolePolicyDocument:
       Version: 2012-10-17
       Statement:
         - Effect: Allow
           Principal:
             Service: codebuild.amazonaws.com
           Action: sts:AssumeRole
     Policies:
       - PolicyName: root
         PolicyDocument:
           Version: 2012-10-17
           Statement:
             - Resource: '*'
               Effect: Allow
               Action:
                 - logs:CreateLogGroup
                 - logs:CreateLogStream
                 - logs:PutLogEvents
             - Resource: '*'
               Effect: Allow
               Action:
                 - ecr:GetAuthorizationToken
             - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
               Effect: Allow
               Action:
                 - s3:GetObject
                 - s3:PutObject
                 - s3:GetObjectVersion
             - Resource:
                 - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${AdminAppEcrRepository}
                 - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ChatServerEcrRepository}
               Effect: Allow
               Action:
                 - ecr:GetDownloadUrlForLayer
                 - ecr:BatchGetImage
                 - ecr:BatchCheckLayerAvailability
                 - ecr:PutImage
                 - ecr:InitiateLayerUpload
                 - ecr:UploadLayerPart
                 - ecr:CompleteLayerUpload
             - Resource: '*'
               Effect: Allow
               Action: cloudformation:ValidateTemplate

  CodeTests:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: AWS/builds/code-tests.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
        EnvironmentVariables:
          - Name: S3_ARTIFACT_BUCKET
            Value: !Ref CodePipelineArtifactBucket
          - Name: NEXT_PUBLIC_SOCKET_SERVER_URL
            Value: !Sub 'https://chat.${Domain}'
      Name: !Sub "${GitSourceRepo}-${GitBranch}-code-tests"
      ServiceRole: !Ref CodeBuildServiceRole

  DockerBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: AWS/builds/docker-build.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
        PrivilegedMode: True
      Name: !Sub "${GitSourceRepo}-${GitBranch}-docker-build"
      ServiceRole: !Ref CodeBuildServiceRole

  E2ETests:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: AWS/builds/e2e-tests.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
      Name: !Sub "${GitSourceRepo}-${GitBranch}-e2e-tests"
      ServiceRole: !Ref CodeBuildServiceRole

  CodePipelineGitHub:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStores:
        - Region: !Ref AWS::Region
          ArtifactStore:
            Type: S3
            Location: !Ref CodePipelineArtifactBucket
        - Region: us-east-1
          ArtifactStore:
            Type: S3
            Location: 'us-east-1-split-side-codepipeline-artifacts'
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitSourceRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: RunCodeTests
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeTests
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: Stack
                - Name: WafStack
                - Name: ClientBuild
              RunOrder: 1
        - Name: UpdateDevOpsStack
          Actions:
            - Name: UpdateCloudFormation
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub "${GitSourceRepo}-${GitBranch}-devops"
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole"
                TemplatePath: App::AWS/cloudformation/DevOps.yaml
                ParameterOverrides: !Sub |
                  {
                    "GitSourceRepo": "${GitSourceRepo}",
                    "GitBranch": "${GitBranch}",
                    "GitHubToken": "${GitHubToken}",
                    "GitHubUser": "${GitHubUser}",
                    "Domain": "${Domain}"
                  }
              InputArtifacts:
                - Name: App
        - Name: BuildDockerImages
          Actions:
            - Name: BuildAdmin
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DockerBuild
                PrimarySource: App
                EnvironmentVariables: !Sub |
                  [
                    {"name": "REPOSITORY_URI", "value": "${AdminAppEcrRepository.RepositoryUri}"},
                    {"name": "DOCKER_BUILD_PATH", "value": "admin/"}
                  ]
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: AdminImageJSON
              RunOrder: 1
            - Name: BuildChat
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DockerBuild
                PrimarySource: App
                EnvironmentVariables: !Sub |
                  [
                    {"name": "REPOSITORY_URI", "value": "${ChatServerEcrRepository.RepositoryUri}"},
                    {"name": "DOCKER_BUILD_PATH", "value": "chat/"}
                  ]
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: ChatImageJSON
              RunOrder: 1
        - Name: DeployApplication
          Actions:
            - Name: UpdateWAFCloudFourmation
              Region: us-east-1
              Namespace: WafStackOutputs
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: WafStack
              OutputArtifacts:
                - Name: WafStackOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub "${GitSourceRepo}-${GitBranch}-waf"
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole"
                TemplatePath: WafStack::AWS/cloudformation/WAF.yaml
                OutputFileName: WafStackOutputs.json
                ParameterOverrides: !Sub |
                  {
                    "ClusterName": "${GitSourceRepo}-${GitBranch}"
                  }
            - Name: UpdateCloudFourmation
              Namespace: StackOutputs
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Stack
                - Name: WafStackOutput
                - Name: AdminImageJSON
                - Name: ChatImageJSON
              OutputArtifacts:
                - Name: StackOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub "${GitSourceRepo}-${GitBranch}-app"
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole"
                TemplatePath: Stack::stack.yaml
                OutputFileName: StackOutputs.json
                ParameterOverrides: !Sub |
                  {
                    "ClusterName": "${GitSourceRepo}-${GitBranch}",
                    "AdminImage": { "Fn::GetParam" : [ "AdminImageJSON", "imagedefinitions.json", "imageUri" ] },
                    "ChatImage": { "Fn::GetParam" : [ "ChatImageJSON", "imagedefinitions.json", "imageUri" ] },
                    "WafAcl" : { "Fn::GetParam" : ["WafStackOutput", "WafStackOutputs.json", "WafAcl"]},
                    "Domain": "${Domain}"
                  }
            - Name: CreateS3Objects
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              InputArtifacts:
                - Name: ClientBuild
              Configuration:
                BucketName: '#{StackOutputs.S3Bucket}'
                Extract: true


  DeveloperAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !Sub "Allow Developer Access to the ${GitSourceRepo} project on the ${GitBranch} branch."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:Describe*'
              - 'cloudformation:List*'
              - 'cloudformation:Get*'
            Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${GitSourceRepo}-${GitBranch}-*'
          - Effect: Allow
            Action:
              - 'codepipeline:Get*'
              - 'codepipeline:List*'
              - 'codepipeline:RetryStageExecution'
              - 'codepipeline:StartPipelineExecution'
              - 'codepipeline:StopPipelineExecution'
            Resource:
              - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineGitHub}/*'
              - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineGitHub}'
          - Effect: Allow
            Action:
              - 'codebuild:BatchGet*'
              - 'codebuild:Get*'
              - 'codebuild:List*'
            Resource:
              - !GetAtt CodeTests.Arn
              - !GetAtt DockerBuild.Arn
              - !GetAtt E2ETests.Arn